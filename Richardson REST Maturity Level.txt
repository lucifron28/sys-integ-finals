Richardson REST Maturity Level

Level 0 - The Swamp of POX
Rule #1: Hyphens (-) should be used to improve the readability of URIs - Also referred to as spinal-case

/api/electronic-devices

Rule #2: Underscores (_) should not be used in URIs
Rule #3: Lowercase letters should be preferred in URI paths
Rule #4: File extensions should not be included in URIs

/api/users.csv


Level 1 - Resources
Rule #1: A trailing forward-slash (/) should not be included in URIs

/api/users

Rule #2: Forward slash separator (/) must be used to indicate a hierarchical relationship

/api/users/anakin/blogs/1/comments/3

Rule #3: Should the endpoint name be singular or plural?

/api/person/1

/api/persons
/api/persons/1

Level 2 - Methods

Method		Scope		Semantics
GET		collection	Retrieve all resources in a collection
GET		resource	Retrieve a single resource
HEAD		collection	Retrieve all resources in a collection (header only)
HEAD		resource	Retrieve a single resource (header only)
POST		collection	Create a new resource in a collection
PUT		resource	Update a resource
PUT /api/users/1
{
userid: 1
fname: "lll",
lname: "vvv"
enrolled: false}

PATCH		resource	Update a resource
PATCH /api/users/1
{
enrolled: true
}

DELETE		resource	Delete a resource
OPTIONS		any		Return available HTTP methods and other options

OPTIONS /api/users

GET,POST

How do we deal with ACtions? 

POST /api/parcels/1/actions/1

{
type: "deliver",
finished: true
}

HTTP Headers
Query Parameters
/api/users?fullname=anakin amparo&status=false
Status Codes

200 ok
{
Status: 500
}


Level 3 - Hypermedia Controls
Content Negotiation

GET /api/users
Accept: application/json


Status code
200

POST /api/users
Content-Type: www-fom

user=anakin&course=BSIT


HATEOAS

GET /api/users


[
	{
		"id":1,
		"name": "anakin",
		"link": "http://myapp/api/users/1"
	},
	{
		"id":2,
		"name": "cada",
		"link": "http://myapp/api/users/1"
	},
	{
		"id":3,
		"name": "espares",
		"link": "http://myapp/api/users/1"
	}
]

GET /api/users/1

{
	"id":1,
	"name": "anakin",
	"links": {
		"self": "http://myapp/api/users/1",
		"friends": "http://myapp/api/users/1/friends",
		"posts": "http://myapp/api/users/1/posts"
	}
}

<tr><td><a href="http://myapplication/api/user/`${user.id}`">`${user.name}`</td></tr>






GET /api/electronic-devices
Request: 
GET /api/electronic-devices
Headers:
	Accept: application/json,xml
	Accept: application/json
	Accept: application/json
	....

Response:
GET /api/electronic-devices
Headers:
	Content-type: application/json
	Content-type: application/json
	Content-type: application/json
	....
Body:
	[.....
	